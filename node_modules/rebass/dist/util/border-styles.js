'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _objectAssign = require('object-assign');

var _objectAssign2 = _interopRequireDefault(_objectAssign);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

/**
 * Utility for extracting border style props from components
 */

var sides = ['', 'Top', 'Right', 'Bottom', 'Left'];

function borderStyles(props) {
  props = props || {};

  return _objectAssign2.default.apply(undefined, [{}].concat(_toConsumableArray(sides.map(function (side) {
    var attr = 'border' + side;
    var value = props[attr];

    if (value === undefined) {
      return {};
    } else if (typeof value === 'number') {
      var _ref;

      return _ref = {}, _defineProperty(_ref, attr + 'Style', 'solid'), _defineProperty(_ref, attr + 'Width', value + 'px'), _ref;
    } else {
      return _defineProperty({}, attr + 'Style', value ? 'solid' : 'none');
    }
  }))));
}

exports.default = borderStyles;