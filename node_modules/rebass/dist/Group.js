'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.styles = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _createComponent = require('./create-component');

var _createComponent2 = _interopRequireDefault(_createComponent);

var _index = require('./index');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Wrapper component to control border radii and alignment of child button components
 */

var styles = exports.styles = {
  display: 'flex',
  alignItems: 'center'
};

var Base = function Base(props) {
  var children = styleChildren(props.children);
  return _react2.default.createElement('div', _extends({}, props, { children: children }));
};

var Group = (0, _createComponent2.default)(Base, styles, {
  name: 'Group'
});

var styleChildren = function styleChildren(children) {
  return _react2.default.Children.map(children, function (child, i) {
    var childProps = {};

    if (child.type === _index.Button || child.type === _index.ButtonOutline || child.type === _index.Input || child.type === _index.Select) {
      childProps.rounded = i === 0 ? 'left' : i === children.length - 1 ? 'right' : false;
    }

    if (child.type === _index.Input || child.type === _index.Select) {
      childProps.mb = 0;
    }

    if (child.type === _index.ButtonOutline || child.type === _index.Input || child.type === _index.Select) {
      childProps.style = _extends({}, child.props.style, {
        marginLeft: -1
      });
    }

    return _react2.default.cloneElement(child, childProps);
  });
};

exports.default = Group;